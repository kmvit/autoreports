from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession
from typing import List, Any

from construction_report_bot.database.models import ITR, Worker, Equipment

# –û–±—â–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    builder = ReplyKeyboardBuilder()
    builder.row(KeyboardButton(text="üìä –ò—Å—Ç–æ—Ä–∏—è –æ—Ç—á–µ—Ç–æ–≤"), KeyboardButton(text="üìë –û—Ç—á–µ—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è"))
    return builder.as_markup(resize_keyboard=True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def get_admin_menu_keyboard() -> ReplyKeyboardMarkup:
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏"),
        KeyboardButton(text="üèóÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞–º–∏")
    )
    builder.row(
        KeyboardButton(text="üë∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º"),
        KeyboardButton(text="üöú –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–æ–π")
    )
    builder.row(KeyboardButton(text="üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞–º–∏"))
    return builder.as_markup(resize_keyboard=True)

def get_client_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤", callback_data="client_list"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑—á–∏–∫–∞", callback_data="client_add")
    )
    builder.row(
        InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data="client_delete"),
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
    )
    return builder.as_markup()

def get_object_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤", callback_data="object_list"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç", callback_data="object_add")
    )
    builder.row(
        InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç", callback_data="object_delete")
    )
    return builder.as_markup()

def get_personnel_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –ò–¢–†", callback_data="itr_list"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ò–¢–†", callback_data="itr_add")
    )
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö", callback_data="worker_list"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—á–µ–≥–æ", callback_data="worker_add")
    )
    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back"))
    return builder.as_markup()

def get_equipment_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫–æ–π"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏", callback_data="equipment_list"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Ö–Ω–∏–∫—É", callback_data="equipment_add")
    )
    return builder.as_markup()

def get_report_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üåÖ –£—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—á–µ—Ç", callback_data="morning_report"),
        InlineKeyboardButton(text="üåÜ –í–µ—á–µ—Ä–Ω–∏–π –æ—Ç—á–µ—Ç", callback_data="evening_report")
    )
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–∞
def get_report_filter_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìÖ –ü–æ –¥–∞—Ç–µ", callback_data="filter_date"),
        InlineKeyboardButton(text="üèóÔ∏è –ü–æ –æ–±—ä–µ–∫—Ç—É", callback_data="filter_object")
    )
    builder.row(
        InlineKeyboardButton(text="üåÖ/üåÜ –ü–æ —Ç–∏–ø—É –æ—Ç—á–µ—Ç–∞", callback_data="filter_report_type"),
        InlineKeyboardButton(text="üîç –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", callback_data="filter_reset")
    )
    return builder.as_markup()

def get_back_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back"))
    return builder.as_markup()

def get_object_back_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="object_back"))
    return builder.as_markup()

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def get_admin_report_menu_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç", callback_data="create_report"),
        InlineKeyboardButton(text="üìã –ú–æ–∏ –æ—Ç—á–µ—Ç—ã", callback_data="my_reports")
    )
    builder.row(
        InlineKeyboardButton(text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç", callback_data="send_report"),
        InlineKeyboardButton(text="üìä –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤", callback_data="export_report")
    )
    builder.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return builder.as_markup()

async def get_objects_keyboard(session: AsyncSession) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–∞"""
    from construction_report_bot.database.crud import get_all_objects
    
    objects = await get_all_objects(session)
    builder = InlineKeyboardBuilder()
    
    for obj in objects:
        builder.row(InlineKeyboardButton(text=obj.name, callback_data=f"object_{obj.id}"))
    
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return builder.as_markup()

async def get_work_subtype_keyboard(report_type: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–¥—Ç–∏–ø–∞ —Ä–∞–±–æ—Ç"""
    builder = InlineKeyboardBuilder()
    
    subtypes = {
        "report_engineering": [
            ["–û—Ç–æ–ø–ª–µ–Ω–∏–µ", "subtype_heating"],
            ["–í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∏ –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è", "subtype_water"],
            ["–ü–æ–∂–∞—Ä–æ—Ç—É—à–µ–Ω–∏–µ", "subtype_fire"],
            ["–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "subtype_ventilation"],
            ["–≠–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ", "subtype_electricity"],
            ["–°–ª–∞–±–æ—Ç–æ—á–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", "subtype_low_current"]
        ],
        "report_internal_networks": [
            ["–ù–í–ö", "subtype_nwc"],
            ["–†–∞–±–æ—Ç—ã —Å –ì–ù–ë", "subtype_gnb"],
            ["–≠–°", "subtype_es"]
        ],
        "report_general_construction": [
            ["–ú–æ–Ω–æ–ª–∏—Ç", "subtype_monolith"],
            ["–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∫–æ—Ç–ª–æ–≤–∞–Ω–∞", "subtype_excavation"],
            ["–î–µ–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", "subtype_dismantling"],
            ["–ö–ª–∞–¥–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", "subtype_masonry"],
            ["–§–∞—Å–∞–¥–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", "subtype_facade"],
            ["–ö—Ä–æ–≤–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", "subtype_roofing"],
            ["–û—Ç–¥–µ–ª–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", "subtype_finishing"]
        ]
    }
    
    if report_type in subtypes:
        for subtype in subtypes[report_type]:
            builder.row(InlineKeyboardButton(text=subtype[0], callback_data=subtype[1]))
    
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_report_type"))
    return builder.as_markup()


async def get_report_actions_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –æ—Ç—á–µ—Ç–æ–º"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ò–¢–†", callback_data="add_itr"))
    builder.row(InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—á–∏—Ö", callback_data="add_workers"))
    builder.row(InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Ö–Ω–∏–∫—É", callback_data="add_equipment"))
    builder.row(InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="add_photos"))
    builder.row(InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", callback_data="add_comments"))
    builder.row(InlineKeyboardButton(text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç", callback_data="save_report"))
    builder.row(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_report"))
    return builder.as_markup()

async def get_itr_keyboard(itr_list: List[ITR], selected_ids: List[int] = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ò–¢–†"""
    builder = InlineKeyboardBuilder()
    
    for itr in itr_list:
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É, –µ—Å–ª–∏ –ò–¢–† —É–∂–µ –≤—ã–±—Ä–∞–Ω
        text = f"{'‚úÖ ' if selected_ids and itr.id in selected_ids else ''}{itr.full_name}"
        builder.row(InlineKeyboardButton(text=text, callback_data=f"itr_{itr.id}"))
    
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_actions"))
    return builder.as_markup()

async def get_workers_keyboard(workers_list: List[Worker], selected_ids: List[int] = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—á–∏—Ö"""
    builder = InlineKeyboardBuilder()
    
    for worker in workers_list:
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É, –µ—Å–ª–∏ —Ä–∞–±–æ—á–∏–π —É–∂–µ –≤—ã–±—Ä–∞–Ω
        text = f"{'‚úÖ ' if selected_ids and worker.id in selected_ids else ''}{worker.full_name} ({worker.position})"
        builder.row(InlineKeyboardButton(text=text, callback_data=f"worker_{worker.id}"))
    
    builder.row(InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="workers_done"))
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_actions"))
    return builder.as_markup()

async def get_equipment_keyboard(equipment_list: List[Equipment], selected_ids: List[int] = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö–Ω–∏–∫–∏"""
    builder = InlineKeyboardBuilder()
    
    for equipment in equipment_list:
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É, –µ—Å–ª–∏ —Ç–µ—Ö–Ω–∏–∫–∞ —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞
        text = f"{'‚úÖ ' if selected_ids and equipment.id in selected_ids else ''}{equipment.name}"
        builder.row(InlineKeyboardButton(text=text, callback_data=f"equipment_{equipment.id}"))
    
    builder.row(InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="equipment_done"))
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_actions"))
    return builder.as_markup()

async def get_photos_keyboard(photos: List[str] = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="photos_done"))
    builder.row(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="back_to_actions"))
    return builder.as_markup()

async def get_comments_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="back_to_actions"))
    return builder.as_markup()

async def get_admin_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_back"))
    return builder.as_markup()

def get_work_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ä–∞–±–æ—Ç"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", callback_data="work_engineering"))
    builder.row(InlineKeyboardButton(text="–í–Ω—É—Ç—Ä–∏–ø–ª–æ—â–∞–¥–æ—á–Ω—ã–µ —Å–µ—Ç–∏", callback_data="work_internal_networks"))
    builder.row(InlineKeyboardButton(text="–ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", callback_data="work_landscaping"))
    builder.row(InlineKeyboardButton(text="–û–±—â–µ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", callback_data="work_general_construction"))
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_object"))
    return builder.as_markup() 