import logging
import os
import uuid
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types.input_file import FSInputFile
from pydantic import ValidationError
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from typing import Union
from datetime import datetime

from construction_report_bot.database.crud import (
    get_report_by_id,
    get_report_with_relations,
    get_all_itr,
    get_all_workers,
    get_all_equipment,
    get_itr_by_id,
    get_worker_by_id,
    get_equipment_by_id,
    create_report
)
from construction_report_bot.database.models import (
    Report, ReportPhoto, ITR, Worker, Equipment,
    report_itr, report_workers, report_equipment, Object
)
from construction_report_bot.config.settings import settings
from construction_report_bot.config.keyboards import (
    get_main_menu_keyboard,
    get_report_actions_keyboard,
    get_itr_keyboard,
    get_workers_keyboard,
    get_equipment_keyboard,
    get_photos_keyboard,
    get_comments_keyboard,
    get_back_keyboard,
    get_admin_report_menu_keyboard
)
from construction_report_bot.utils.decorators import error_handler, with_session
from construction_report_bot.middlewares.role_check import admin_required
from construction_report_bot.utils.logging.logger import log_admin_action, log_error
from construction_report_bot.states.report_states import ReportStates
from construction_report_bot.services.report_service import ReportService
from construction_report_bot.database.session import async_session

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤
admin_report_edit_router = Router()
# –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏
admin_report_edit_router.message.middleware(admin_required())
admin_report_edit_router.callback_query.middleware(admin_required())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
@admin_report_edit_router.callback_query(F.data.startswith("edit_report_"))
@error_handler
@with_session
async def process_edit_report(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞"""
    # –ü–æ–ª—É—á–∞–µ–º ID –æ—Ç—á–µ—Ç–∞ –∏–∑ callback_data
    report_id = int(callback.data.split("_")[2])
    logging.info(f"–ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ #{report_id}")
    logging.info(f"Callback data: {callback.data}")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç –∏–∑ –ë–î
        report = await get_report_by_id(session, report_id)
        if not report:
            logging.warning(f"[process_edit_report] –û—Ç—á–µ—Ç #{report_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            await callback.message.edit_text(
                "–û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                reply_markup=await get_admin_report_menu_keyboard()
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
        object_query = select(Object).where(Object.id == report.object_id)
        result = await session.execute(object_query)
        object = result.scalar_one_or_none()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        state_data = {
            'report_id': report_id,
            'object_id': report.object_id,
            'report_type': report.report_type,
            'type': report.type,
            'work_type': report.report_type,
            'work_subtype': report.work_subtype,
            'comments': report.comments
        }
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        photos_query = select(ReportPhoto).where(ReportPhoto.report_id == report_id)
        result = await session.execute(photos_query)
        photos = result.scalars().all()
        
        # –ü–æ–ª—É—á–∞–µ–º –ò–¢–†
        itr_query = (
            select(ITR)
            .join(report_itr, ITR.id == report_itr.c.itr_id)
            .where(report_itr.c.report_id == report_id)
        )
        result = await session.execute(itr_query)
        itr_personnel = result.scalars().all()
        state_data['itr_list'] = [itr.id for itr in itr_personnel]
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–±–æ—á–∏—Ö
        workers_query = (
            select(Worker)
            .join(report_workers, Worker.id == report_workers.c.worker_id)
            .where(report_workers.c.report_id == report_id)
        )
        result = await session.execute(workers_query)
        workers = result.scalars().all()
        state_data['workers_list'] = [worker.id for worker in workers]
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Ö–Ω–∏–∫—É
        equipment_query = (
            select(Equipment)
            .join(report_equipment, Equipment.id == report_equipment.c.equipment_id)
            .where(report_equipment.c.report_id == report_id)
        )
        result = await session.execute(equipment_query)
        equipment = result.scalars().all()
        state_data['equipment_list'] = [eq.id for eq in equipment]
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(**state_data)
        logging.info(f"[process_edit_report] –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏: {state_data}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç—á–µ—Ç–µ
        if report.status == "sent":
            report_info = (
                f"‚úÖ –û—Ç—á–µ—Ç #{report.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫—É\n\n"
                f"–¢–∏–ø: {report.type}\n"
                f"–î–∞—Ç–∞: {report.date.strftime('%d.%m.%Y %H:%M')}\n"
                f"–°—Ç–∞—Ç—É—Å: {report.status}\n"
                f"–û–±—ä–µ–∫—Ç: {object.name if object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            )
        else:   
            report_info = (
            f"üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ #{report.id}\n\n"
            f"–¢–∏–ø: {report.type}\n"
            f"–î–∞—Ç–∞: {report.date.strftime('%d.%m.%Y %H:%M')}\n"
            f"–°—Ç–∞—Ç—É—Å: {report.status}\n"
            f"–û–±—ä–µ–∫—Ç: {object.name if object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø —Ä–∞–±–æ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.report_type:
            report_info += f"–¢–∏–ø —Ä–∞–±–æ—Ç: {report.report_type}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–∏–ø —Ä–∞–±–æ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.work_subtype:
            report_info += f"–ü–æ–¥—Ç–∏–ø —Ä–∞–±–æ—Ç: {report.work_subtype}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ò–¢–†, –µ—Å–ª–∏ –µ—Å—Ç—å
        if itr_personnel:
            itr_names = [itr.full_name for itr in itr_personnel]
            if itr_names:
                report_info += f"–ò–¢–†: {', '.join(itr_names)}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–±–æ—á–∏—Ö, –µ—Å–ª–∏ –µ—Å—Ç—å
        if workers:
            worker_names = [worker.full_name for worker in workers]
            if worker_names:
                report_info += f"–†–∞–±–æ—á–∏–µ: {', '.join(worker_names)}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Ö–Ω–∏–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
        if equipment:
            equipment_names = [eq.name for eq in equipment]
            if equipment_names:
                report_info += f"–¢–µ—Ö–Ω–∏–∫–∞: {', '.join(equipment_names)}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.comments:
            report_info += f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {report.comments}\n"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        if photos:
            photo_count = len(photos)
            report_info += f"–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photo_count}\n"
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await callback.message.edit_text(
            report_info + "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=await get_report_actions_keyboard(report_id)
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await state.set_state(ReportStates.edit_report)
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}", exc_info=True)
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞",
            reply_markup=await get_admin_report_menu_keyboard()
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ò–¢–†
@admin_report_edit_router.callback_query(F.data == "add_itr")
@error_handler
@with_session
async def process_add_itr(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ò–¢–†"""
    await callback.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ò–¢–†
    itr_list = await get_all_itr(session)
    
    if not itr_list:
        await callback.message.edit_text(
            "–°–ø–∏—Å–æ–∫ –ò–¢–† –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –ò–¢–† –≤ —Å–∏—Å—Ç–µ–º—É.",
            reply_markup=await get_report_actions_keyboard()
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ò–¢–†
    keyboard = await get_itr_keyboard(itr_list, selected_ids=[])
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ò–¢–† –¥–ª—è –æ—Ç—á–µ—Ç–∞:",
        reply_markup=keyboard
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(ReportStates.add_itr)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ò–¢–†
@admin_report_edit_router.callback_query(F.data.startswith("itr_"), ReportStates.add_itr)
@error_handler
@with_session
async def process_itr_selection(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ò–¢–†"""
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ò–¢–† –∏–∑ callback_data
    itr_id = int(callback.data.split("_")[1])
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    report_id = data.get('report_id')
    
    if not report_id:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞", show_alert=True)
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –ò–¢–†
    itr = await get_itr_by_id(session, itr_id)
    
    if not itr:
        await callback.answer("–ò–¢–† –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ò–¢–† –≤ –æ—Ç—á–µ—Ç
    report = await ReportService.add_itr_to_report(session, report_id, [itr_id])
    
    if not report:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ò–¢–† –≤ –æ—Ç—á–µ—Ç", show_alert=True)
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ callback
    await callback.answer(f"‚úÖ –í—ã–±—Ä–∞–Ω –ò–¢–†: {itr.full_name}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –æ—Ç—á–µ—Ç–∞
    await state.set_state(ReportStates.edit_report)

    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
    await callback.message.edit_text(
        f"‚úÖ –ò–¢–† {itr.full_name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—á–µ—Ç.\n\n{await format_report_info(report, callback.message.text)}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=await get_report_actions_keyboard(report_id)
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–∏—Ö
@admin_report_edit_router.callback_query(F.data == "add_workers")
@error_handler
@with_session
async def process_add_workers(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–∏—Ö"""
    await callback.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    report_id = data.get('report_id')
    
    if not report_id:
        await callback.message.edit_text(
            "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∑–∞–Ω–æ–≤–æ.",
            reply_markup=await get_main_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç —Å —Ç–µ–∫—É—â–∏–º–∏ —Ä–∞–±–æ—á–∏–º–∏
    report = await get_report_with_relations(session, report_id)
    if not report:
        await callback.message.edit_text(
            "‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∑–∞–Ω–æ–≤–æ.",
            reply_markup=await get_main_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞–±–æ—á–∏—Ö
    all_workers = await get_all_workers(session)
    
    if not all_workers:
        await callback.message.edit_text(
            "–°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ —Ä–∞–±–æ—á–∏—Ö –≤ —Å–∏—Å—Ç–µ–º—É.",
            reply_markup=await get_report_actions_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ ID —Ä–∞–±–æ—á–∏—Ö, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—Ç—á–µ—Ç
    existing_worker_ids = [worker.id for worker in report.workers] if report.workers else []
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(workers_list=existing_worker_ids)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ –≤—Å–µ–º–∏ —Ä–∞–±–æ—á–∏–º–∏, –æ—Ç–º–µ—á–∞—è —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—á–µ—Ç
    keyboard = await get_workers_keyboard(all_workers, selected_ids=existing_worker_ids)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏—Ö —É–∂–µ –≤ –æ—Ç—á–µ—Ç–µ
    existing_count = len(existing_worker_ids)
    message_text = f"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–±–æ—á–∏—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞:\n\n"
    if existing_count > 0:
        message_text += f"‚ÑπÔ∏è –í –æ—Ç—á–µ—Ç–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–±–æ—á–∏—Ö: {existing_count}\n\n"
    message_text += "‚úÖ - —Ä–∞–±–æ—á–∏–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—Ç—á–µ—Ç\n"
    message_text += "–í—ã –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –≥–∞–ª–æ—á–∫–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—á–∏—Ö –∏–∑ –æ—Ç—á–µ—Ç–∞, –∏–ª–∏ –æ—Ç–º–µ—Ç–∏—Ç—å –Ω–æ–≤—ã—Ö —Ä–∞–±–æ—á–∏—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è."
    
    await callback.message.edit_text(
        message_text,
        reply_markup=keyboard
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(ReportStates.add_workers)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—á–∏—Ö
@admin_report_edit_router.callback_query(F.data.startswith("worker_"), ReportStates.add_workers)
@error_handler
@with_session
async def process_worker_selection(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—á–∏—Ö"""
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ä–∞–±–æ—á–µ–≥–æ –∏–∑ callback_data
    worker_id = int(callback.data.split("_")[1])
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    workers_list = data.get('workers_list', [])
    report_id = data.get('report_id')
    
    if not report_id:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞", show_alert=True)
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç —Å —Ç–µ–∫—É—â–∏–º–∏ —Ä–∞–±–æ—á–∏–º–∏
    report = await get_report_with_relations(session, report_id)
    if not report:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –æ—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º –≤—ã–±–æ—Ä–µ
    was_selected = worker_id in workers_list
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–¥–∞–ª—è–µ–º —Ä–∞–±–æ—á–µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞
    if was_selected:
        workers_list.remove(worker_id)
    else:
        workers_list.append(worker_id)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(workers_list=workers_list)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞–±–æ—á–∏—Ö
    all_workers = await get_all_workers(session)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Ç–º–µ—á–µ–Ω–Ω—ã–º–∏ —Ä–∞–±–æ—á–∏–º–∏
    keyboard = await get_workers_keyboard(all_workers, selected_ids=workers_list)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ callback
    await callback.answer(f"{'–£–¥–∞–ª–µ–Ω' if was_selected else '–î–æ–±–∞–≤–ª–µ–Ω'} —Ä–∞–±–æ—á–∏–π")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏—Ö –≤—ã–±—Ä–∞–Ω–æ
    selected_count = len(workers_list)
    message_text = f"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–±–æ—á–∏—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞:\n\n"
    message_text += f"‚ÑπÔ∏è –í—ã–±—Ä–∞–Ω–æ —Ä–∞–±–æ—á–∏—Ö: {selected_count}\n\n"
    message_text += "‚úÖ - —Ä–∞–±–æ—á–∏–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—Ç—á–µ—Ç\n"
    message_text += "–í—ã –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –≥–∞–ª–æ—á–∫–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—á–∏—Ö –∏–∑ –æ—Ç—á–µ—Ç–∞, –∏–ª–∏ –æ—Ç–º–µ—Ç–∏—Ç—å –Ω–æ–≤—ã—Ö —Ä–∞–±–æ—á–∏—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è."
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_text(
        message_text,
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—á–∏—Ö
@admin_report_edit_router.callback_query(F.data == "workers_done", ReportStates.add_workers)
@error_handler
@with_session
async def process_workers_done(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—á–∏—Ö"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    workers_list = data.get('workers_list', [])
    report_id = data.get('report_id')
    
    if not report_id:
        await callback.message.edit_text(
            "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∑–∞–Ω–æ–≤–æ.",
            reply_markup=await get_main_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç —Å —Ç–µ–∫—É—â–∏–º–∏ —Ä–∞–±–æ—á–∏–º–∏
    report = await get_report_with_relations(session, report_id)
    if not report:
        await callback.message.edit_text(
            "‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∑–∞–Ω–æ–≤–æ.",
            reply_markup=await get_main_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö
    selected_workers = []
    for worker_id in workers_list:
        worker = await get_worker_by_id(session, worker_id)
        if worker:
            selected_workers.append(worker)
    
    if not selected_workers:
        await callback.message.edit_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=await get_workers_keyboard()
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç—á–µ—Ç —Å –Ω–æ–≤—ã–º —Å–ø–∏—Å–∫–æ–º —Ä–∞–±–æ—á–∏—Ö —á–µ—Ä–µ–∑ ReportService
    updated_report = await ReportService.add_workers_to_report(
        session=session,
        report_id=report_id,
        worker_ids=workers_list
    )
    
    if not updated_report:
        await callback.message.edit_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç—á–µ—Ç.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=await get_main_menu_keyboard()
        )
        return
    # –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—á–∏—Ö, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
    await state.set_state(ReportStates.edit_report)

    await callback.message.edit_text(
        f"‚úÖ –†–∞–±–æ—á–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –æ—Ç—á–µ—Ç–µ.\n\n{await format_report_info(report, callback.message.text)}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=await get_report_actions_keyboard(report_id)
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫–∏
@admin_report_edit_router.callback_query(F.data == "add_equipment")
@error_handler
@with_session
async def process_add_equipment(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫–∏"""
    await callback.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    report_id = data.get('report_id')
    
    if not report_id:
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç —Å —Ç–µ–∫—É—â–µ–π —Ç–µ—Ö–Ω–∏–∫–æ–π
    report = await get_report_with_relations(session, report_id)
    if not report:
        await callback.message.edit_text(
            "‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏
    all_equipment = await get_all_equipment(session)
    
    if not all_equipment:
        await callback.message.edit_text(
            "–°–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏ –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É –≤ —Å–∏—Å—Ç–µ–º—É.",
            reply_markup=await get_report_actions_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ ID —Ç–µ–∫—É—â–µ–π —Ç–µ—Ö–Ω–∏–∫–∏ –∏–∑ –æ—Ç—á–µ—Ç–∞
    current_equipment_ids = [eq.id for eq in report.equipment] if report.equipment else []
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    await state.update_data(equipment_list=current_equipment_ids)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö–Ω–∏–∫–∏
    await state.set_state(ReportStates.add_equipment)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–µ—Ö–Ω–∏–∫–æ–π, –æ—Ç–º–µ—á–∞—è —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—É—é
    keyboard = await get_equipment_keyboard(all_equipment, selected_ids=current_equipment_ids)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ —Ç–µ—Ö–Ω–∏–∫–∏ —É–∂–µ –≤ –æ—Ç—á–µ—Ç–µ
    existing_count = len(current_equipment_ids)
    message_text = f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–∞:\n\n"
    if existing_count > 0:
        message_text += f"‚ÑπÔ∏è –í –æ—Ç—á–µ—Ç–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –µ–¥–∏–Ω–∏—Ü —Ç–µ—Ö–Ω–∏–∫–∏: {existing_count}\n\n"
    message_text += "‚úÖ - —Ç–µ—Ö–Ω–∏–∫–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç—á–µ—Ç\n"
    message_text += "–í—ã –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –≥–∞–ª–æ—á–∫–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ç–µ—Ö–Ω–∏–∫—É –∏–∑ –æ—Ç—á–µ—Ç–∞, –∏–ª–∏ –æ—Ç–º–µ—Ç–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–∏–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è."
    
    await callback.message.edit_text(
        message_text,
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö–Ω–∏–∫–∏
@admin_report_edit_router.callback_query(F.data == "equipment_done", ReportStates.add_equipment)
@error_handler
@with_session
async def process_equipment_done(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö–Ω–∏–∫–∏"""
    await callback.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    report_id = data.get('report_id')
    equipment_list = data.get('equipment_list', [])
    
    if not report_id:
        logging.error("report_id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏")
        await callback.message.edit_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∑–∞–Ω–æ–≤–æ.",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        await state.clear()
        return
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        report = await get_report_by_id(session, report_id)
        if not report:
            logging.error(f"–û—Ç—á–µ—Ç —Å ID {report_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            await callback.message.edit_text(
                "–û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∑–∞–Ω–æ–≤–æ.",
                reply_markup=await get_admin_report_menu_keyboard()
            )
            await state.clear()
            return
        
        if not equipment_list:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ–π —Ç–µ—Ö–Ω–∏–∫–∏
            all_equipment = await get_all_equipment(session)
            await callback.message.edit_text(
                "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥.",
                reply_markup=await get_equipment_keyboard(all_equipment)
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –∏—Ö –∏–º–µ–Ω–∞
        equipment_names = []
        for eq_id in equipment_list:
            equipment = await session.get(Equipment, eq_id)
            if equipment:
                equipment_names.append(equipment.name)
        
        if not equipment_names:
            await callback.message.edit_text(
                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                reply_markup=await get_report_actions_keyboard(report_id)
            )
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç—á–µ—Ç —Å –Ω–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π
        updated_report = await ReportService.add_equipment_to_report(
            session=session,
            report_id=report_id,
            equipment_data=[{"equipment_id": eq_id} for eq_id in equipment_list]
        )
        
        logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞ #{report_id}. –°–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏: {equipment_list}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(equipment_list)}")
        
        if not updated_report:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç—á–µ—Ç {report_id}")
            await callback.message.edit_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                reply_markup=await get_report_actions_keyboard(report_id)
            )
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
        equipment_info = [f"‚Ä¢ {name}" for name in equipment_names]
        
        if equipment_info:
            names_text = "\n".join(equipment_info)
            await callback.message.edit_text(
                f"‚úÖ –¢–µ—Ö–Ω–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –æ—Ç—á–µ—Ç–µ:\n{names_text}\n\n {await format_report_info(report, callback.message.text)}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=await get_report_actions_keyboard(report_id)
            )
        else:
            await callback.message.edit_text(
                "‚úÖ –¢–µ—Ö–Ω–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –æ—Ç—á–µ—Ç–µ.\n\n {await format_report_info(report, callback.message.text)}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=await get_report_actions_keyboard(report_id)
            )
        
        # –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö–Ω–∏–∫–∏, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
        await state.set_state(ReportStates.edit_report)

        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏–∫–∏ –≤ –æ—Ç—á–µ—Ç: {str(e)}", exc_info=True)
        await callback.message.edit_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=await get_report_actions_keyboard(report_id)
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö–Ω–∏–∫–∏
@admin_report_edit_router.callback_query(F.data.startswith("equipment_"), ReportStates.add_equipment)
@error_handler
@with_session
async def process_equipment_selection(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö–Ω–∏–∫–∏"""
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–µ—Ö–Ω–∏–∫–∏ –∏–∑ callback_data
    equipment_id = int(callback.data.split("_")[1])
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    equipment_list = data.get('equipment_list', [])
    report_id = data.get('report_id')
    
    if not report_id:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞", show_alert=True)
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç —Å —Ç–µ–∫—É—â–µ–π —Ç–µ—Ö–Ω–∏–∫–æ–π
    report = await get_report_with_relations(session, report_id)
    if not report:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –æ—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    was_selected = equipment_id in equipment_list
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–¥–∞–ª—è–µ–º —Ç–µ—Ö–Ω–∏–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞
    if was_selected:
        equipment_list.remove(equipment_id)
    else:
        equipment_list.append(equipment_id)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(equipment_list=equipment_list)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏
    logging.info(f"–û–±–Ω–æ–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏: {equipment_list}")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏
    all_equipment = await get_all_equipment(session)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Ç–º–µ—á–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π
    keyboard = await get_equipment_keyboard(all_equipment, selected_ids=equipment_list)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ callback
    await callback.answer(f"{'–£–¥–∞–ª–µ–Ω–∞' if was_selected else '–î–æ–±–∞–≤–ª–µ–Ω–∞'} —Ç–µ—Ö–Ω–∏–∫–∞")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ —Ç–µ—Ö–Ω–∏–∫–∏ –≤—ã–±—Ä–∞–Ω–æ
    selected_count = len(equipment_list)
    message_text = f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–∞:\n\n"
    message_text += f"‚ÑπÔ∏è –í—ã–±—Ä–∞–Ω–æ –µ–¥–∏–Ω–∏—Ü —Ç–µ—Ö–Ω–∏–∫–∏: {selected_count}\n\n"
    message_text += "‚úÖ - —Ç–µ—Ö–Ω–∏–∫–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç—á–µ—Ç\n"
    message_text += "–í—ã –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –≥–∞–ª–æ—á–∫–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ç–µ—Ö–Ω–∏–∫—É –∏–∑ –æ—Ç—á–µ—Ç–∞, –∏–ª–∏ –æ—Ç–º–µ—Ç–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–∏–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è."
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_text(
        message_text,
        reply_markup=keyboard
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(ReportStates.add_equipment)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
@admin_report_edit_router.callback_query(F.data == "add_photos")
@error_handler
@with_session
async def process_add_photos(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    report_id = data.get('report_id')
    
    if not report_id:
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    report = await get_report_with_relations(session, report_id)
    if not report:
        await callback.message.edit_text(
            "‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—Ä–æ—Å
    photos_query = select(ReportPhoto).where(ReportPhoto.report_id == report_id)
    result = await session.execute(photos_query)
    photos = result.scalars().all()
    current_photos = [photo.file_path for photo in photos]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    keyboard = await get_photos_keyboard(current_photos)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    await callback.message.edit_text(
        "üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞.\n\n"
        "‚ÑπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n"
        "‚ÑπÔ∏è –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'.\n\n"
        f"‚ÑπÔ∏è –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ: {len(current_photos)}",
        reply_markup=keyboard
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(ReportStates.add_photos)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
@admin_report_edit_router.message(ReportStates.add_photos, F.photo)
@error_handler
@with_session
async def process_photo(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    report_id = data.get('report_id')
    
    if not report_id:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    report = await get_report_with_relations(session, report_id)
    if not report:
        await message.answer(
            "‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    photos_dir = os.path.join(settings.MEDIA_ROOT, 'reports', str(report_id), 'photos')
    os.makedirs(photos_dir, exist_ok=True)
    
    saved_photos = []
    # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(message.photo)}")
    
    # –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—É—é –±–æ–ª—å—à—É—é –≤–µ—Ä—Å–∏—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    largest_photo = max(message.photo, key=lambda x: x.file_size)
    logging.info(f"–í—ã–±—Ä–∞–Ω–∞ —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è –≤–µ—Ä—Å–∏—è: {largest_photo.width}x{largest_photo.height}, —Ä–∞–∑–º–µ—Ä: {largest_photo.file_size} –±–∞–π—Ç")
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        file_name = f"{uuid.uuid4()}.jpg"
        file_path = os.path.join(photos_dir, file_name)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        await message.bot.download(
            largest_photo,
            destination=file_path
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ –≤ –ë–î
        photo_record = ReportPhoto(
            report_id=report_id,
            file_path=file_path,
            description=None  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∑–∂–µ
        )
        session.add(photo_record)
        saved_photos.append(file_path)
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {str(e)}", exc_info=True)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î
    await session.commit()
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—Ä–æ—Å
    photos_query = select(ReportPhoto).where(ReportPhoto.report_id == report_id)
    result = await session.execute(photos_query)
    photos = result.scalars().all()
    current_photos = [photo.file_path for photo in photos]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    keyboard = await get_photos_keyboard(current_photos)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
    photos_count = len(saved_photos)
    await message.answer(
        f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photos_count}\n\n"
        f"üì∏ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –æ—Ç—á–µ—Ç–µ: {len(current_photos)}\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å '–ì–æ—Ç–æ–≤–æ'.",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
@admin_report_edit_router.callback_query(F.data == "photos_done", ReportStates.add_photos)
@error_handler
@with_session
async def process_photos_done(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    report_id = data.get('report_id')
    
    if not report_id:
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
    report = await get_report_with_relations(session, report_id)
    if not report:
        await callback.message.edit_text(
            "‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    photos = [photo.file_path for photo in report.photos] if report.photos else []
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö
    message_text = (
        f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n\n"
        f"üì∏ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –æ—Ç—á–µ—Ç–µ: {len(photos)}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è:"
    )

    
    await show_report_edit_page(callback, report_id, session)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(ReportStates.edit_report)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
@admin_report_edit_router.callback_query(F.data == "add_comments")
@error_handler
async def process_add_comments(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"""
    await callback.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    comments = data.get('comments', '')
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    keyboard = await get_comments_keyboard()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    await callback.message.edit_text(
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –æ—Ç—á–µ—Ç—É.\n",
        reply_markup=keyboard
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(ReportStates.add_comments)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
@admin_report_edit_router.message(ReportStates.add_comments)
@error_handler
@with_session
async def process_comments(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"""
    # –ü–æ–ª—É—á–∞–µ–º ID –æ—Ç—á–µ—Ç–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    report_id = data.get('report_id')
    
    if not report_id:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –æ—Ç—á–µ—Ç–∞",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç –∏–∑ –ë–î
    report = await get_report_with_relations(session, report_id)
    
    if not report:
        await message.answer(
            "‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
            reply_markup=await get_admin_report_menu_keyboard()
        )
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ—Ç—á–µ—Ç–µ
    updated_report = await create_report(
        session=session,
        data={
            'report_id': report_id,
            'comments': message.text
        }
    )

    if not updated_report:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤",
            reply_markup=await get_report_actions_keyboard()
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(comments=message.text)
    
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await message.answer(
        f"‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!\n\n{await format_report_info(report, message.text)}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=await get_report_actions_keyboard(report_id)
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await state.set_state(ReportStates.edit_report)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –¥–µ–π—Å—Ç–≤–∏—è–º
@admin_report_edit_router.callback_query(F.data == "back_to_actions")
@error_handler
async def process_back_to_actions(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –¥–µ–π—Å—Ç–≤–∏—è–º"""
    await callback.answer()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç—á–µ—Ç–∞
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:",
        reply_markup=await get_report_actions_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞
@admin_report_edit_router.callback_query(F.data == "save_report")
@error_handler
@with_session
async def process_save_report(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞"""
    await callback.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    logging.info(f"[process_save_report] –î–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞ –ø–µ—Ä–µ–¥ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π: {data}")
    
    try:
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
        logging.info("[process_save_report] –ù–∞—á–∏–Ω–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö")
        await validate_report_data(data)
        logging.info("[process_save_report] –í–∞–ª–∏–¥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç—á–µ—Ç–∞ –Ω–∞ "sent" –∏ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        report_id = data.get('report_id')
        data['status'] = "sent"
        data['sent_at'] = datetime.utcnow()
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
        logging.info("[process_save_report] –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –≤ –ë–î")
        report = await create_report(session, data)
        logging.info(f"[process_save_report] –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å ID: {report.id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
        object_query = select(Object).where(Object.id == report.object_id)
        result = await session.execute(object_query)
        object = result.scalar_one_or_none()
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
        log_admin_action("report_sent", callback.from_user.id, f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç—á–µ—Ç #{report.id} –ø–æ –æ–±—ä–µ–∫—Ç—É '{object.name if object else '–ù–µ —É–∫–∞–∑–∞–Ω'}'")
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞
        await callback.message.edit_text(
            f"‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫—É!\n\n"
            f"ID –æ—Ç—á–µ—Ç–∞: {report.id}\n"
            f"–û–±—ä–µ–∫—Ç: {object.name if object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"–¢–∏–ø —Ä–∞–±–æ—Ç: {report.report_type}\n"
            f"–í—Ä–µ–º—è: {report.type}\n"
            f"–°—Ç–∞—Ç—É—Å: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω",
            reply_markup=await get_admin_report_menu_keyboard()
        )
    except ValidationError as e:
        logging.error(f"[process_save_report] –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
        await callback.message.edit_text(f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {str(e)}")
    except Exception as e:
        logging.error(f"[process_save_report] –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        await callback.message.edit_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
@admin_report_edit_router.callback_query(F.data == "cancel_report")
@error_handler
async def process_cancel_report(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞"""
    await callback.answer()
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await callback.message.edit_text(
        "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=await get_admin_report_menu_keyboard()
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞
async def validate_report_data(data: dict) -> None:
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞"""
    logging.info(f"–ù–∞—á–∞–ª–æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞. –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}")
    
    required_fields = ['object_id', 'report_type', 'itr_list', 'workers_list', 'equipment_list']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π
    for field in required_fields:
        if field not in data:
            error_msg = f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: {field}"
            logging.error(error_msg)
            raise ValueError(error_msg)
        logging.info(f"–ü–æ–ª–µ {field} –Ω–∞–π–¥–µ–Ω–æ. –ó–Ω–∞—á–µ–Ω–∏–µ: {data[field]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π
    valid_report_types = ['–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏', '–í–Ω—É—Ç—Ä–∏–ø–ª–æ—â–∞–¥–æ—á–Ω—ã–µ —Å–µ—Ç–∏', '–ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', '–û–±—â–µ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã']
    if data['report_type'] not in valid_report_types:
        error_msg = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø –æ—Ç—á–µ—Ç–∞"
        logging.error(error_msg)
        raise ValueError(error_msg)
    
    if data['type'] not in ['morning', 'evening']:
        error_msg = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫"
        logging.error(error_msg)
        raise ValueError(error_msg)
    
    logging.info("–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


async def show_report_edit_page(message: Union[Message, CallbackQuery], report_id: int, session: AsyncSession) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ callback query –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        report_id: ID –æ—Ç—á–µ—Ç–∞
        session: –°–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç —Å–æ –≤—Å–µ–º–∏ —Å–≤—è–∑—è–º–∏ —á–µ—Ä–µ–∑ get_report_with_relations
        report = await get_report_with_relations(session, report_id)
        if not report:
            if isinstance(message, CallbackQuery):
                await message.message.edit_text(
                    "–û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    reply_markup=await get_admin_report_menu_keyboard()
                )
            else:
                await message.answer(
                    "–û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    reply_markup=await get_admin_report_menu_keyboard()
                )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç
        object = report.object
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç—á–µ—Ç–µ
        report_info = (
            f"üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ #{report.id}\n\n"
            f"–¢–∏–ø: {report.type}\n"
            f"–î–∞—Ç–∞: {report.date.strftime('%d.%m.%Y %H:%M')}\n"
            f"–°—Ç–∞—Ç—É—Å: {report.status}\n"
            f"–û–±—ä–µ–∫—Ç: {object.name if object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø —Ä–∞–±–æ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.report_type:
            report_info += f"–¢–∏–ø —Ä–∞–±–æ—Ç: {report.report_type}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–∏–ø —Ä–∞–±–æ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.work_subtype:
            report_info += f"–ü–æ–¥—Ç–∏–ø —Ä–∞–±–æ—Ç: {report.work_subtype}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ò–¢–†, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.itr_personnel:
            itr_names = [itr.full_name for itr in report.itr_personnel]
            if itr_names:
                report_info += f"–ò–¢–†: {', '.join(itr_names)}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–±–æ—á–∏—Ö, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.workers:
            worker_names = [worker.full_name for worker in report.workers]
            if worker_names:
                report_info += f"–†–∞–±–æ—á–∏–µ: {', '.join(worker_names)}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Ö–Ω–∏–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.equipment:
            equipment_names = [eq.name for eq in report.equipment]
            if equipment_names:
                report_info += f"–¢–µ—Ö–Ω–∏–∫–∞: {', '.join(equipment_names)}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.photos:
            photo_count = len(report.photos)
            report_info += f"–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photo_count}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        if report.comments:
            report_info += f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {report.comments}\n"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ç—á–µ—Ç–µ
        if isinstance(message, CallbackQuery):
            await message.message.edit_text(
                f"{report_info}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=await get_report_actions_keyboard(report_id)
            )
        else:
            await message.answer(
                f"{report_info}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=await get_report_actions_keyboard(report_id)
            )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {str(e)}", exc_info=True)
        if isinstance(message, CallbackQuery):
            await message.message.edit_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.",
                reply_markup=await get_admin_report_menu_keyboard()
            )
        else:
            await message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.",
                reply_markup=await get_admin_report_menu_keyboard()
            )


async def format_report_info(report: Report, message: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Ç—á–µ—Ç–µ"""
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç—á–µ—Ç–µ

    if report.status == "sent":
        report_info = (
            f"‚úÖ –û—Ç—á–µ—Ç #{report.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫—É\n\n"
            f"–¢–∏–ø: {report.type}\n"
            f"–î–∞—Ç–∞: {report.date.strftime('%d.%m.%Y %H:%M')}\n"
            f"–°—Ç–∞—Ç—É—Å: {report.status}\n"
            f"–û–±—ä–µ–∫—Ç: {report.object.name}\n"
        )
    else:
        report_info = (
            f"üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ #{report.id}\n\n"
            f"–¢–∏–ø: {report.type}\n"
            f"–î–∞—Ç–∞: {report.date.strftime('%d.%m.%Y %H:%M')}\n"
            f"–°—Ç–∞—Ç—É—Å: {report.status}\n"
            f"–û–±—ä–µ–∫—Ç: {report.object.name}\n"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø —Ä–∞–±–æ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
    if report.type:
        report_info += f"–¢–∏–ø —Ä–∞–±–æ—Ç: {report.type}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–∏–ø —Ä–∞–±–æ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
    if report.work_subtype:
        report_info += f"–ü–æ–¥—Ç–∏–ø —Ä–∞–±–æ—Ç: {report.work_subtype}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ò–¢–†, –µ—Å–ª–∏ –µ—Å—Ç—å
    if report.itr_personnel:
        itr_names = [itr.full_name for itr in report.itr_personnel]
        if itr_names:
            report_info += f"–ò–¢–†: {', '.join(itr_names)}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–±–æ—á–∏—Ö, –µ—Å–ª–∏ –µ—Å—Ç—å
    if report.workers:
        worker_names = [worker.full_name for worker in report.workers]
        if worker_names:
            report_info += f"–†–∞–±–æ—á–∏–µ: {', '.join(worker_names)}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Ö–Ω–∏–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
    if report.equipment:
        equipment_names = [eq.name for eq in report.equipment]
        if equipment_names:
            report_info += f"–¢–µ—Ö–Ω–∏–∫–∞: {', '.join(equipment_names)}\n"

    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
    if report.photos:
        photo_count = len(report.photos)
        report_info += f"–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photo_count}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    report_info += f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {message}\n"

    return report_info